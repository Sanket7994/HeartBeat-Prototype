# Generated by Django 4.2.1 on 2023-06-16 08:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('base_app', '0003_clinic_zipcode_patientappointment_date_of_birth_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PharmacyInventory',
            fields=[
                ('drug_id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('drug_name', models.CharField(max_length=250, unique=True)),
                ('generic_name', models.CharField(max_length=250)),
                ('brand_name', models.CharField(max_length=250)),
                ('drug_class', models.CharField(choices=[('ANALGESICS', 'ANALGESICS: Used for headaches, muscle pain, toothaches, menstrual pain'), ('ANTIPYRETICS', 'ANTIPYRETICS: Used to reduce fever'), ('ANTACIDS', 'ANTACIDS: Used for heartburn, indigestion, acid reflux'), ('ANTIHISTAMINES', 'ANTIHISTAMINES: Used for allergies, itchy skin or eyes, sneezing, runny nose'), ('COUGH_AND_COLD', 'COUGH_AND_COLD: Used for cough relief, nasal congestion, sore throat'), ('TOPICAL_ANALGESICS', 'TOPICAL_ANALGESICS: Used for muscle aches and strains, joint pain, minor injuries'), ('ANTIDIARRHEALS', 'ANTIDIARRHEALS: Used for diarrhea relief'), ('DERMATOLOGICAL', 'DERMATOLOGICAL: Used for acne treatment, eczema or dermatitis management, fungal infections'), ('ORAL_CONTRACEPTIVES', 'ORAL_CONTRACEPTIVES: Used for pregnancy prevention'), ('OPHTHALMIC', 'OPHTHALMIC: Used for eye infections, dry eyes, allergic conjunctivitis'), ('OTHER', 'Other')], default='OTHER', max_length=250)),
                ('dosage_form', models.CharField(choices=[('ORAL', 'Oral'), ('OPHTHALMIC', 'Ophthalmic'), ('INHALATION', 'Inhalation'), ('INJECTION', 'Injection'), ('TOPICAL', 'Topical'), ('OTHER', 'Other')], default='OTHER', max_length=250)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('add_quantity', models.PositiveIntegerField(default=0, help_text='add_quantity')),
                ('total_stock_quantity', models.PositiveIntegerField(default=0, editable=False, help_text='main_stock_quantity')),
                ('manufacture_date', models.DateField(default=django.utils.timezone.now)),
                ('lifetime_in_months', models.PositiveIntegerField(default=0, help_text='number_of_months')),
                ('expiry_date', models.DateField(blank=True, default=None, editable=False, null=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrescribedMedication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_app.pharmacyinventory')),
            ],
        ),
        migrations.AddField(
            model_name='patientappointment',
            name='patient_age',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='clinic',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='clinic',
            name='zipcode',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='clinicmember',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='patientappointment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('prescription_id', models.UUIDField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('dosage_freq', models.CharField(choices=[('ONCE_A_DAY', 'Once a day'), ('TWICE_A_DAY', 'Twice a day'), ('THRICE_A_DAY', 'Thrice a day'), ('FLEXIBLE', 'Flexible timings')], default='FLEXIBLE', max_length=250, null=True)),
                ('description', models.TextField(blank=True, max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescriptions', to='base_app.patientappointment')),
                ('clinic_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescriptions', to='base_app.clinic')),
                ('consultant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescriptions', to='base_app.clinicmember')),
                ('medications', models.ManyToManyField(related_name='prescriptions', to='base_app.prescribedmedication')),
            ],
        ),
        migrations.AddField(
            model_name='prescribedmedication',
            name='prescription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_app.prescription'),
        ),
        migrations.AddConstraint(
            model_name='prescribedmedication',
            constraint=models.UniqueConstraint(fields=('prescription', 'medication'), name='once_per_medication_prescription'),
        ),
    ]
